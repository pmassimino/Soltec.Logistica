// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Soltec.Logistica.Data;

#nullable disable

namespace Soltec.Logistica.Migrations
{
    [DbContext(typeof(LogisticaContext))]
    partial class LogisticaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.16");

            modelBuilder.Entity("Soltec.Logistica.Model.Chofer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<long>("NumeroDocumento")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Patente")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("PatenteAcoplado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Chofer");
                });

            modelBuilder.Entity("Soltec.Logistica.Model.EstadoRegistro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(0);

                    b.Property<int>("IdRegistro")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(1);

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.HasKey("Id", "IdRegistro");

                    b.HasIndex("IdRegistro");

                    b.ToTable("EstadoRegistro");
                });

            modelBuilder.Entity("Soltec.Logistica.Model.MovPunto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Cantidad")
                        .HasColumnType("REAL");

                    b.Property<string>("Concepto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdChofer")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("IdTransaccion")
                        .HasColumnType("TEXT");

                    b.Property<long>("NumeroComprobante")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("MovPunto");
                });

            modelBuilder.Entity("Soltec.Logistica.Model.Registro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdChofer")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdChofer");

                    b.ToTable("Registro");
                });

            modelBuilder.Entity("Soltec.Logistica.Model.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("Soltec.Logistica.Model.TicketValidacion", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TicketValidacion");
                });

            modelBuilder.Entity("Soltec.Logistica.Model.TipoViaje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.Property<double>("Puntos")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("TipoViaje");
                });

            modelBuilder.Entity("Soltec.Logistica.Model.Transporte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<long>("NumeroDocumento")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Transporte");
                });

            modelBuilder.Entity("Soltec.Logistica.Model.TransporteChofer", b =>
                {
                    b.Property<int>("IdTransporte")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(0);

                    b.Property<int>("IdChofer")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(1);

                    b.HasKey("IdTransporte", "IdChofer");

                    b.HasIndex("IdChofer");

                    b.ToTable("TransporteChofer");
                });

            modelBuilder.Entity("Soltec.Logistica.Model.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Soltec.Logistica.Model.UsuarioRol", b =>
                {
                    b.Property<int>("IdUsuario")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(0);

                    b.Property<int>("IdRol")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(1);

                    b.HasKey("IdUsuario", "IdRol");

                    b.HasIndex("IdRol");

                    b.ToTable("UsuarioRol");
                });

            modelBuilder.Entity("Soltec.Logistica.Model.Viaje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Concepto")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Distancia")
                        .HasColumnType("TEXT");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdChofer")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdTipo")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("IdTransaccion")
                        .HasColumnType("TEXT");

                    b.Property<long>("NumeroComprobante")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdChofer");

                    b.ToTable("Viaje");
                });

            modelBuilder.Entity("Soltec.Logistica.Model.EstadoRegistro", b =>
                {
                    b.HasOne("Soltec.Logistica.Model.Registro", "Registro")
                        .WithMany("Estados")
                        .HasForeignKey("IdRegistro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Registro");
                });

            modelBuilder.Entity("Soltec.Logistica.Model.Registro", b =>
                {
                    b.HasOne("Soltec.Logistica.Model.Chofer", "Chofer")
                        .WithMany()
                        .HasForeignKey("IdChofer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chofer");
                });

            modelBuilder.Entity("Soltec.Logistica.Model.TransporteChofer", b =>
                {
                    b.HasOne("Soltec.Logistica.Model.Transporte", "Transporte")
                        .WithMany("Choferes")
                        .HasForeignKey("IdChofer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Transporte");
                });

            modelBuilder.Entity("Soltec.Logistica.Model.UsuarioRol", b =>
                {
                    b.HasOne("Soltec.Logistica.Model.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Soltec.Logistica.Model.Usuario", "Usuario")
                        .WithMany("Roles")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Soltec.Logistica.Model.Viaje", b =>
                {
                    b.HasOne("Soltec.Logistica.Model.Chofer", "Chofer")
                        .WithMany()
                        .HasForeignKey("IdChofer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chofer");
                });

            modelBuilder.Entity("Soltec.Logistica.Model.Registro", b =>
                {
                    b.Navigation("Estados");
                });

            modelBuilder.Entity("Soltec.Logistica.Model.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Soltec.Logistica.Model.Transporte", b =>
                {
                    b.Navigation("Choferes");
                });

            modelBuilder.Entity("Soltec.Logistica.Model.Usuario", b =>
                {
                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
